/*
 * This settings file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 * In a single project build this file can be empty or even removed.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user guide at https://docs.gradle.org/3.5/userguide/multi_project_builds.html
 */

/*
// To declare projects as part of a multi-project build use the 'include' method
include 'shared'
include 'api'
include 'services:webservice'
*/

rootProject.name = 'example'

include ':api'
include ':provider'
include ':consumer'

include ':framework-microservice-autoconfigure'
project(':framework-microservice-autoconfigure').projectDir = new File(settingsDir, '../framework/framework-microservice-autoconfigure')
include ':framework-kernel-header'
project(':framework-kernel-header').projectDir = new File(settingsDir, '../framework/framework-kernel-header')
include ':framework-kernel-discovery'
project(':framework-kernel-discovery').projectDir = new File(settingsDir, '../framework/framework-kernel-discovery')
include ':framework-kernel-model'
project(':framework-kernel-model').projectDir = new File(settingsDir, '../framework/framework-kernel-model')
include ':framework-kernel-logging'
project(':framework-kernel-logging').projectDir = new File(settingsDir, '../framework/framework-kernel-logging')
include ':framework-kernel-security'
project(':framework-kernel-security').projectDir = new File(settingsDir, '../framework/framework-kernel-security')
include ':framework-kernel-useragent'
project(':framework-kernel-useragent').projectDir = new File(settingsDir, '../framework/framework-kernel-useragent')
include ':framework-kernel-util'
project(':framework-kernel-util').projectDir = new File(settingsDir, '../framework/framework-kernel-util')
include ':framework-microservice-exception'
project(':framework-microservice-exception').projectDir = new File(settingsDir, '../framework/framework-microservice-exception')
include ':framework-microservice-executor'
project(':framework-microservice-executor').projectDir = new File(settingsDir, '../framework/framework-microservice-executor')
include ':framework-microservice-feign'
project(':framework-microservice-feign').projectDir = new File(settingsDir, '../framework/framework-microservice-feign')
include ':framework-microservice-grayroute'
project(':framework-microservice-grayroute').projectDir = new File(settingsDir, '../framework/framework-microservice-grayroute')
include ':framework-microservice-metrics'
project(':framework-microservice-metrics').projectDir = new File(settingsDir, '../framework/framework-microservice-metrics')
include ':framework-microservice-swagger'
project(':framework-microservice-swagger').projectDir = new File(settingsDir, '../framework/framework-microservice-swagger')





